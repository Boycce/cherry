$border-color: #f5f5f5 !default;
$under-color:  $text !default;
$under-width:  3px !default;

/* ---- Borders ---------------------- */

  @each $i in [1, 2, 3, 4, 5] {
    .b-#{$i} {
      border: #{$i}px solid $border-color;
    }
    .bl-#{$i} {
      border-left: #{$i}px solid $border-color;
    }
    .br-#{$i} {
      border-right: #{$i}px solid $border-color;
    }
    .bt-#{$i} {
      border-top: #{$i}px solid $border-color;
    }
    .bb-#{$i} {
      border-bottom: #{$i}px solid $border-color;
    }
    .bx-#{$i} {
      border-left: #{$i}px solid $border-color;
      border-right: #{$i}px solid $border-color;
    }
    .by-#{$i} {
      border-top: #{$i}px solid $border-color;
      border-bottom: #{$i}px solid $border-color;
    }
  }

/* ---- Colors & Gradients ----------- */

  @each $name, $color in map-merge($shades, $app-colors) {
    @if (type-of($color) == 'map') {
      $color-invert: nth($color, 2);
      $color: nth($color, 1);
    }
    .text-#{$name} {
      color: $color;
      fill: $color;
    }
    .bg-#{$name} {
      color: $color;
      fill: $color;
    }
    @if (variable-exists(color-invert)) {
      .text-#{$name}-invert {
        color: $color-invert;
        fill: $color-invert;
      }
      .bg-#{$name}-invert {
        color: $color-invert;
        fill: $color-invert;
      }
    }
  }

  @each $name, $gradient in $custom-gradients {
    .#{$name} {
      background-image: linear-gradient($gradient);
    }
  }

/* ---- Helpers ---------------------- */

  .left {
    float: left;
  }
  .right {
    float: right;
  }
  .clear {
    clear: both;
  }
  .cf:after {
    content: "";
    display: block;
    clear: both;
  }
  .cover {
    width: 100%;
    height: 100%;
    background-position: center;
    background-size: cover;
    object-fit: cover;
    object-position: center center;
    overflow: hidden;
  }
  .table {
    display: table;
    height: 100%;
    margin: 0 auto;
  }
  .tr {
    display: table-row;
  }
  .td {
    display: table-cell;
    vertical-align: middle;
  }
  .min-0 {
    min-width: 0 !important;
  }
  .no-select {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .text-center {
    text-align: center;
  }
  .flex {
    display: flex;
  }
  .flex-1 {
    flex: 1;
  }
  .align-self-center {
    align-self: center;
  }
  .justify-center {
    justify-content: center;
  }
  .relative {
    position: relative;
  }

/* ---- Underline -------------------- */

  .under {
    position: relative;
  }
  .under:before {
    content: "";
    display: block;
    position: absolute;
    bottom: 0.25em;
    height: $under-width;
    width: 100%;
    opacity: 0;
    background-color: $under-color;
    transition: transform 0.15s ease, opacity 0.2s ease;
  }
  .under:hover:before,
  .under:focus:before,
  .under.active:before {
    transform: translateY(1px);
    opacity: 1;
  }

/* ---- Vue animations --------------- */

  /* Slide */

  .slide-up-enter-active {
    transition: all 0.2s ease-out;
  }
  .slide-up-leave-active {
    transition: all 0.2s ease-in;
  }
  .slide-up-enter,
  .slide-up-leave-to {
    opacity: 0;
    transform: translateY(-12px);
  }

  /* Fade */

  .fade-enter-active,
  .fade-leave-active {
    transition: opacity 0.15s ease;
  }
  .fade-enter,
  .fade-leave-to {
    opacity: 0.1;
  }
